jobs:
  build:
    docker:
      - image: python:3.6                   # Docker environment for the build step
    steps:
      - checkout                            # Check out the code from the repository
      - run: |
          pip install -r requirements.txt   # Install Python dependencies
          python manage.py check            # Run application checks

  test:
    docker:
      - image: python:3.6                   # Docker environment for testing
    steps:
      - checkout
      - run: |
          pip install -r requirements.txt   # Install Python dependencies
          python manage.py test taskManager # Run tests for "taskManager"
    
  release:
    machine: true                           # Use machine executor for Docker tasks
    steps:
      - checkout
      - run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin  # Log in to Docker Hub
          docker build -t $DOCKER_USERNAME/django.nv .   # Build the Docker image
          docker push $DOCKER_USERNAME/django.nv         # Push the Docker image to the registry

  integration:
    docker:
      - image: python:3.6
    steps:
      - checkout
      - run: |
          echo "This is an integration step"
          exit 0  # Always succeed, but can still log or flag within the script

  prod:
    docker:
      - image: python:3.6
    steps:
      - checkout
      - run: echo "This is a 'deploy' step." # Placeholder for production deployment tasks

workflows:
  version: 2
  django:
    jobs:
      - build
      - test
      - release
          requires:
            - build
            - test                          # Ensure build and test pass before running release
      - integration
          requires:
            - release                       # Integration step runs after release
      - prod:
          type: approval                    # Require manual approval before running
          requires:
            - integration                   # Ensure integration runs successfully
